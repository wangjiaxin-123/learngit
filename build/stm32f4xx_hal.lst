ARM GAS  /tmp/ccJoFBu8.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"stm32f4xx_hal.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.HAL_MspInit,"ax",%progbits
  21              		.align	2
  22              		.weak	HAL_MspInit
  23              		.thumb
  24              		.thumb_func
  26              	HAL_MspInit:
  27              	.LFB132:
  28              		.file 1 "Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c"
   1:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
   2:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @file    stm32f4xx_hal.c
   4:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
   8:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @verbatim
   9:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  10:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ==============================================================================
  12:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  13:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL. 
  15:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]
  16:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     The HAL contains two APIs' categories: 
  17:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****          (+) Services HAL APIs
  19:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  20:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   @endverbatim
  21:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @attention
  23:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  24:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2017 STMicroelectronics.
  25:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  27:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
ARM GAS  /tmp/ccJoFBu8.s 			page 2


  31:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *
  32:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */ 
  34:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  35:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #include "stm32f4xx_hal.h"
  37:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  38:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup STM32F4xx_HAL_Driver
  39:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  40:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  41:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  42:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL HAL
  43:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief HAL module driver.
  44:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  45:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  46:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  47:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private typedef -----------------------------------------------------------*/
  48:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private define ------------------------------------------------------------*/
  49:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Constants
  50:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  51:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  52:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  53:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief STM32F4xx HAL Driver version number V1.7.7
  54:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  55:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  56:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB1   (0x07U) /*!< [23:16] sub1 version */
  57:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_SUB2   (0x07U) /*!< [15:8]  sub2 version */
  58:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */ 
  59:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define __STM32F4xx_HAL_VERSION         ((__STM32F4xx_HAL_VERSION_MAIN << 24U)\
  60:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB1 << 16U)\
  61:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_SUB2 << 8U )\
  62:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         |(__STM32F4xx_HAL_VERSION_RC))
  63:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                                         
  64:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define IDCODE_DEVID_MASK    0x00000FFFU
  65:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  66:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ------------ RCC registers bit address in the alias region ----------- */
  67:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
  68:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MEMRMP Register ---*/ 
  69:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of UFB_MODE bit */ 
  70:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MEMRMP_OFFSET             SYSCFG_OFFSET 
  71:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BIT_NUMBER       SYSCFG_MEMRMP_UFB_MODE_Pos
  72:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define UFB_MODE_BB               (uint32_t)(PERIPH_BB_BASE + (MEMRMP_OFFSET * 32U) + (UFB_MODE_BIT
  73:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  74:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  CMPCR Register ---*/ 
  75:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of CMP_PD bit */ 
  76:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20U) 
  77:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMP_PD_BIT_NUMBER         SYSCFG_CMPCR_CMP_PD_Pos
  78:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define CMPCR_CMP_PD_BB           (uint32_t)(PERIPH_BB_BASE + (CMPCR_OFFSET * 32U) + (CMP_PD_BIT_NU
  79:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  80:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* ---  MCHDLYCR Register ---*/ 
  81:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Alias word address of BSCKSEL bit */ 
  82:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_OFFSET            (SYSCFG_OFFSET + 0x30U) 
  83:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define BSCKSEL_BIT_NUMBER         SYSCFG_MCHDLYCR_BSCKSEL_Pos
  84:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #define MCHDLYCR_BSCKSEL_BB        (uint32_t)(PERIPH_BB_BASE + (MCHDLYCR_OFFSET * 32U) + (BSCKSEL_B
  85:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  86:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
  87:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
ARM GAS  /tmp/ccJoFBu8.s 			page 3


  88:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  89:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private macro -------------------------------------------------------------*/
  90:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private variables ---------------------------------------------------------*/
  91:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @addtogroup HAL_Private_Variables
  92:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
  93:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
  94:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __IO uint32_t uwTick;
  95:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  96:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  97:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
  98:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
  99:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 100:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private function prototypes -----------------------------------------------*/
 101:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /* Private functions ---------------------------------------------------------*/
 102:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 103:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions HAL Exported Functions
 104:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 105:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 106:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 107:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group1 Initialization and de-initialization Functions 
 108:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    Initialization and de-initialization functions
 109:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 110:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim    
 111:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 112:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****               ##### Initialization and Configuration functions #####
 113:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 114:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 115:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Initializes the Flash interface the NVIC allocation and initial clock 
 116:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           configuration. It initializes the systick also when timeout is needed 
 117:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           and the backup domain when enabled.
 118:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) De-Initializes common part of the HAL.
 119:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated 
 120:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****           Tick interrupt priority. 
 121:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 122:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              can eventually implement his proper time base source (a general purpose 
 123:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              timer for example or other time source), keeping in mind that Time base 
 124:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and 
 125:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              handled in milliseconds basis.
 126:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically 
 127:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time 
 128:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig(). 
 129:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular 
 130:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a 
 131:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority 
 132:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller 
 133:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             ISR process will be blocked. 
 134:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak  
 135:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 136:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 137:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 138:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 139:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 140:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 141:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function is used to initialize the HAL Library; it must be the first 
 142:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         instruction to be executed in the main program (before to call any other
 143:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         HAL function), it performs the following:
 144:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configure the Flash prefetch, instruction and Data caches.
ARM GAS  /tmp/ccJoFBu8.s 			page 4


 145:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Configures the SysTick to generate an interrupt each 1 millisecond,
 146:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           which is clocked by the HSI (at this stage, the clock is not yet
 147:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           configured and thus the system is running from the internal HSI at 16 MHz).
 148:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Set NVIC Group Priority to 4.
 149:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           Calls the HAL_MspInit() callback function defined in user file 
 150:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *           "stm32f4xx_hal_msp.c" to do the global low level hardware initialization 
 151:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *            
 152:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   SysTick is used as time base for the HAL_Delay() function, the application
 153:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         need to ensure that the SysTick time base is always set to 1 millisecond
 154:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         to have correct HAL operation.
 155:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 156:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 157:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 159:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 160:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (INSTRUCTION_CACHE_ENABLE != 0U)
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 162:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 163:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 164:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (DATA_CACHE_ENABLE != 0U)
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_DATA_CACHE_ENABLE();
 166:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 167:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 168:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #if (PREFETCH_ENABLE != 0U)
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 170:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 171:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 172:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Set Interrupt Group Priority */
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 174:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 175:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_InitTick(TICK_INT_PRIORITY);
 177:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 178:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Init the low level hardware */
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspInit();
 180:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 181:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 182:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 184:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 185:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 186:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  This function de-Initializes common part of the HAL and stops the systick.
 187:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         This function is optional.   
 188:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 189:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 190:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 192:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 195:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 198:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_FORCE_RESET();
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
 201:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
ARM GAS  /tmp/ccJoFBu8.s 			page 5


 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_FORCE_RESET();
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
 204:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_FORCE_RESET();
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
 207:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 208:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* De-Init the low level hardware */
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_MspDeInit();
 210:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
 211:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 212:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 214:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 215:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 216:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Initialize the MSP.
 217:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 218:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 219:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspInit(void)
 220:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  29              		.loc 1 220 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 7047     		bx	lr
  35              		.cfi_endproc
  36              	.LFE132:
  38 0002 00BF     		.section	.text.HAL_MspDeInit,"ax",%progbits
  39              		.align	2
  40              		.weak	HAL_MspDeInit
  41              		.thumb
  42              		.thumb_func
  44              	HAL_MspDeInit:
  45              	.LFB133:
 221:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 222:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 223:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */
 224:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 225:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 226:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 227:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  DeInitializes the MSP.
 228:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 229:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 230:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_MspDeInit(void)
 231:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
  46              		.loc 1 231 0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  51 0000 7047     		bx	lr
  52              		.cfi_endproc
  53              	.LFE133:
  55 0002 00BF     		.section	.text.HAL_DeInit,"ax",%progbits
  56              		.align	2
  57              		.global	HAL_DeInit
  58              		.thumb
ARM GAS  /tmp/ccJoFBu8.s 			page 6


  59              		.thumb_func
  61              	HAL_DeInit:
  62              	.LFB131:
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
  63              		.loc 1 191 0
  64              		.cfi_startproc
  65              		@ args = 0, pretend = 0, frame = 0
  66              		@ frame_needed = 0, uses_anonymous_args = 0
 191:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Reset of all peripherals */
  67              		.loc 1 191 0
  68 0000 10B5     		push	{r4, lr}
  69              	.LCFI0:
  70              		.cfi_def_cfa_offset 8
  71              		.cfi_offset 4, -8
  72              		.cfi_offset 14, -4
 193:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
  73              		.loc 1 193 0
  74 0002 094B     		ldr	r3, .L5
  75 0004 4FF0FF32 		mov	r2, #-1
  76 0008 1A62     		str	r2, [r3, #32]
 194:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  77              		.loc 1 194 0
  78 000a 0024     		movs	r4, #0
  79 000c 1C62     		str	r4, [r3, #32]
 196:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
  80              		.loc 1 196 0
  81 000e 5A62     		str	r2, [r3, #36]
 197:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  82              		.loc 1 197 0
  83 0010 5C62     		str	r4, [r3, #36]
 199:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB1_RELEASE_RESET();
  84              		.loc 1 199 0
  85 0012 1A61     		str	r2, [r3, #16]
 200:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  86              		.loc 1 200 0
  87 0014 1C61     		str	r4, [r3, #16]
 202:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB2_RELEASE_RESET();
  88              		.loc 1 202 0
  89 0016 5A61     		str	r2, [r3, #20]
 203:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  90              		.loc 1 203 0
  91 0018 5C61     		str	r4, [r3, #20]
 205:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   __HAL_RCC_AHB3_RELEASE_RESET();
  92              		.loc 1 205 0
  93 001a 9A61     		str	r2, [r3, #24]
 206:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  94              		.loc 1 206 0
  95 001c 9C61     		str	r4, [r3, #24]
 209:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     
  96              		.loc 1 209 0
  97 001e FFF7FEFF 		bl	HAL_MspDeInit
  98              	.LVL0:
 213:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
  99              		.loc 1 213 0
 100 0022 2046     		mov	r0, r4
 101 0024 10BD     		pop	{r4, pc}
 102              	.L6:
ARM GAS  /tmp/ccJoFBu8.s 			page 7


 103 0026 00BF     		.align	2
 104              	.L5:
 105 0028 00380240 		.word	1073887232
 106              		.cfi_endproc
 107              	.LFE131:
 109              		.section	.text.HAL_InitTick,"ax",%progbits
 110              		.align	2
 111              		.weak	HAL_InitTick
 112              		.thumb
 113              		.thumb_func
 115              	HAL_InitTick:
 116              	.LFB134:
 232:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 233:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 234:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****    */ 
 235:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 236:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 237:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 238:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function configures the source of the time base.
 239:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 240:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        Tick interrupt priority.
 241:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 242:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 243:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 244:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 245:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 246:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 247:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 248:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 249:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementation  in user file.
 250:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 251:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval HAL status
 252:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 253:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 254:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 117              		.loc 1 254 0
 118              		.cfi_startproc
 119              		@ args = 0, pretend = 0, frame = 0
 120              		@ frame_needed = 0, uses_anonymous_args = 0
 121              	.LVL1:
 122 0000 10B5     		push	{r4, lr}
 123              	.LCFI1:
 124              		.cfi_def_cfa_offset 8
 125              		.cfi_offset 4, -8
 126              		.cfi_offset 14, -4
 127 0002 0446     		mov	r4, r0
 255:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 256:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 128              		.loc 1 256 0
 129 0004 0E4B     		ldr	r3, .L12
 130 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 131              	.LVL2:
 132 0008 4FF47A73 		mov	r3, #1000
 133 000c B3FBF0F3 		udiv	r3, r3, r0
 134 0010 0C4A     		ldr	r2, .L12+4
 135 0012 1068     		ldr	r0, [r2]
 136 0014 B0FBF3F0 		udiv	r0, r0, r3
ARM GAS  /tmp/ccJoFBu8.s 			page 8


 137 0018 FFF7FEFF 		bl	HAL_SYSTICK_Config
 138              	.LVL3:
 139 001c 58B9     		cbnz	r0, .L9
 257:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
 259:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 260:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 261:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure the SysTick IRQ priority */
 262:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 140              		.loc 1 262 0
 141 001e 0F2C     		cmp	r4, #15
 142 0020 0BD8     		bhi	.L10
 263:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 264:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 143              		.loc 1 264 0
 144 0022 4FF0FF30 		mov	r0, #-1
 145 0026 2146     		mov	r1, r4
 146 0028 0022     		movs	r2, #0
 147 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 148              	.LVL4:
 265:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     uwTickPrio = TickPriority;
 149              		.loc 1 265 0
 150 002e 064B     		ldr	r3, .L12+8
 151 0030 1C60     		str	r4, [r3]
 266:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 267:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   else
 268:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     return HAL_ERROR;
 270:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 271:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 272:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Return function status */
 273:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return HAL_OK;
 152              		.loc 1 273 0
 153 0032 0020     		movs	r0, #0
 154 0034 10BD     		pop	{r4, pc}
 155              	.LVL5:
 156              	.L9:
 258:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 157              		.loc 1 258 0
 158 0036 0120     		movs	r0, #1
 159 0038 10BD     		pop	{r4, pc}
 160              	.LVL6:
 161              	.L10:
 269:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 162              		.loc 1 269 0
 163 003a 0120     		movs	r0, #1
 274:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 164              		.loc 1 274 0
 165 003c 10BD     		pop	{r4, pc}
 166              	.LVL7:
 167              	.L13:
 168 003e 00BF     		.align	2
 169              	.L12:
 170 0040 00000000 		.word	.LANCHOR0
 171 0044 00000000 		.word	SystemCoreClock
 172 0048 00000000 		.word	.LANCHOR1
 173              		.cfi_endproc
ARM GAS  /tmp/ccJoFBu8.s 			page 9


 174              	.LFE134:
 176              		.section	.text.HAL_Init,"ax",%progbits
 177              		.align	2
 178              		.global	HAL_Init
 179              		.thumb
 180              		.thumb_func
 182              	HAL_Init:
 183              	.LFB130:
 158:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Configure Flash prefetch, Instruction cache, Data cache */ 
 184              		.loc 1 158 0
 185              		.cfi_startproc
 186              		@ args = 0, pretend = 0, frame = 0
 187              		@ frame_needed = 0, uses_anonymous_args = 0
 188 0000 08B5     		push	{r3, lr}
 189              	.LCFI2:
 190              		.cfi_def_cfa_offset 8
 191              		.cfi_offset 3, -8
 192              		.cfi_offset 14, -4
 161:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* INSTRUCTION_CACHE_ENABLE */
 193              		.loc 1 161 0
 194 0002 0B4B     		ldr	r3, .L16
 195 0004 1A68     		ldr	r2, [r3]
 196 0006 42F40072 		orr	r2, r2, #512
 197 000a 1A60     		str	r2, [r3]
 165:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* DATA_CACHE_ENABLE */
 198              		.loc 1 165 0
 199 000c 1A68     		ldr	r2, [r3]
 200 000e 42F48062 		orr	r2, r2, #1024
 201 0012 1A60     		str	r2, [r3]
 169:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** #endif /* PREFETCH_ENABLE */
 202              		.loc 1 169 0
 203 0014 1A68     		ldr	r2, [r3]
 204 0016 42F48072 		orr	r2, r2, #256
 205 001a 1A60     		str	r2, [r3]
 173:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 206              		.loc 1 173 0
 207 001c 0320     		movs	r0, #3
 208 001e FFF7FEFF 		bl	HAL_NVIC_SetPriorityGrouping
 209              	.LVL8:
 176:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 210              		.loc 1 176 0
 211 0022 0020     		movs	r0, #0
 212 0024 FFF7FEFF 		bl	HAL_InitTick
 213              	.LVL9:
 179:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 214              		.loc 1 179 0
 215 0028 FFF7FEFF 		bl	HAL_MspInit
 216              	.LVL10:
 183:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 217              		.loc 1 183 0
 218 002c 0020     		movs	r0, #0
 219 002e 08BD     		pop	{r3, pc}
 220              	.L17:
 221              		.align	2
 222              	.L16:
 223 0030 003C0240 		.word	1073888256
 224              		.cfi_endproc
ARM GAS  /tmp/ccJoFBu8.s 			page 10


 225              	.LFE130:
 227              		.section	.text.HAL_IncTick,"ax",%progbits
 228              		.align	2
 229              		.weak	HAL_IncTick
 230              		.thumb
 231              		.thumb_func
 233              	HAL_IncTick:
 234              	.LFB135:
 275:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 276:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 277:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @}
 278:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 279:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 280:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /** @defgroup HAL_Exported_Functions_Group2 HAL Control functions 
 281:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *  @brief    HAL Control functions
 282:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  *
 283:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @verbatim
 284:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 285:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****                       ##### HAL Control functions #####
 286:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  ===============================================================================
 287:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     [..]  This section provides functions allowing to:
 288:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a tick value in millisecond
 289:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Provide a blocking delay in millisecond
 290:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Suspend the time base source interrupt
 291:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Resume the time base source interrupt
 292:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the HAL API driver version
 293:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device identifier
 294:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Get the device revision identifier
 295:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 296:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 297:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 298:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 299:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** @endverbatim
 300:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @{
 301:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 302:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 303:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 304:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function is called to increment  a global variable "uwTick"
 305:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        used as application time base.
 306:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 307:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       in SysTick ISR.
 308:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other 
 309:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *      implementations in user file.
 310:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 311:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 312:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_IncTick(void)
 313:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 235              		.loc 1 313 0
 236              		.cfi_startproc
 237              		@ args = 0, pretend = 0, frame = 0
 238              		@ frame_needed = 0, uses_anonymous_args = 0
 239              		@ link register save eliminated.
 314:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uwTick += uwTickFreq;
 240              		.loc 1 314 0
 241 0000 034A     		ldr	r2, .L19
 242 0002 1368     		ldr	r3, [r2]
 243 0004 0349     		ldr	r1, .L19+4
ARM GAS  /tmp/ccJoFBu8.s 			page 11


 244 0006 0978     		ldrb	r1, [r1]	@ zero_extendqisi2
 245 0008 0B44     		add	r3, r3, r1
 246 000a 1360     		str	r3, [r2]
 247 000c 7047     		bx	lr
 248              	.L20:
 249 000e 00BF     		.align	2
 250              	.L19:
 251 0010 00000000 		.word	uwTick
 252 0014 00000000 		.word	.LANCHOR0
 253              		.cfi_endproc
 254              	.LFE135:
 256              		.section	.text.HAL_GetTick,"ax",%progbits
 257              		.align	2
 258              		.weak	HAL_GetTick
 259              		.thumb
 260              		.thumb_func
 262              	HAL_GetTick:
 263              	.LFB136:
 315:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 316:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 317:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 318:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Provides a tick value in millisecond.
 319:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other 
 320:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 321:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick value
 322:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 323:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 324:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 264              		.loc 1 324 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 325:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTick;
 269              		.loc 1 325 0
 270 0000 014B     		ldr	r3, .L22
 271 0002 1868     		ldr	r0, [r3]
 326:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 272              		.loc 1 326 0
 273 0004 7047     		bx	lr
 274              	.L23:
 275 0006 00BF     		.align	2
 276              	.L22:
 277 0008 00000000 		.word	uwTick
 278              		.cfi_endproc
 279              	.LFE136:
 281              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 282              		.align	2
 283              		.global	HAL_GetTickPrio
 284              		.thumb
 285              		.thumb_func
 287              	HAL_GetTickPrio:
 288              	.LFB137:
 327:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 328:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 329:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function returns a tick priority.
 330:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick priority
ARM GAS  /tmp/ccJoFBu8.s 			page 12


 331:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 332:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 333:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 289              		.loc 1 333 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 334:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTickPrio;
 335:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 294              		.loc 1 335 0
 295 0000 014B     		ldr	r3, .L25
 296 0002 1868     		ldr	r0, [r3]
 297 0004 7047     		bx	lr
 298              	.L26:
 299 0006 00BF     		.align	2
 300              	.L25:
 301 0008 00000000 		.word	.LANCHOR1
 302              		.cfi_endproc
 303              	.LFE137:
 305              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 306              		.align	2
 307              		.global	HAL_SetTickFreq
 308              		.thumb
 309              		.thumb_func
 311              	HAL_SetTickFreq:
 312              	.LFB138:
 336:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 337:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 338:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Set new tick Freq.
 339:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Status
 340:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 341:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 342:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 313              		.loc 1 342 0
 314              		.cfi_startproc
 315              		@ args = 0, pretend = 0, frame = 0
 316              		@ frame_needed = 0, uses_anonymous_args = 0
 317              	.LVL11:
 318 0000 10B5     		push	{r4, lr}
 319              	.LCFI3:
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 4, -8
 322              		.cfi_offset 14, -4
 323              	.LVL12:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 344:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 345:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 346:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 347:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 348:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (uwTickFreq != Freq)
 324              		.loc 1 348 0
 325 0002 084B     		ldr	r3, .L31
 326 0004 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 327 0006 8442     		cmp	r4, r0
 328 0008 09D0     		beq	.L29
 329              	.LVL13:
ARM GAS  /tmp/ccJoFBu8.s 			page 13


 349:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 350:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     /* Back up uwTickFreq frequency */
 351:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     prevTickFreq = uwTickFreq;
 352:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 353:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 354:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     uwTickFreq = Freq;
 330              		.loc 1 354 0
 331 000a 1870     		strb	r0, [r3]
 355:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 356:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     /* Apply the new tick Freq  */
 357:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 332              		.loc 1 357 0
 333 000c 064B     		ldr	r3, .L31+4
 334 000e 1868     		ldr	r0, [r3]
 335              	.LVL14:
 336 0010 FFF7FEFF 		bl	HAL_InitTick
 337              	.LVL15:
 358:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 359:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     if (status != HAL_OK)
 338              		.loc 1 359 0
 339 0014 0346     		mov	r3, r0
 340 0016 18B1     		cbz	r0, .L28
 360:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     {
 361:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       /* Restore previous tick frequency */
 362:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****       uwTickFreq = prevTickFreq;
 341              		.loc 1 362 0
 342 0018 024A     		ldr	r2, .L31
 343 001a 1470     		strb	r4, [r2]
 344 001c 00E0     		b	.L28
 345              	.LVL16:
 346              	.L29:
 343:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 347              		.loc 1 343 0
 348 001e 0023     		movs	r3, #0
 349              	.LVL17:
 350              	.L28:
 363:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     }
 364:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 365:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 366:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return status;
 367:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 351              		.loc 1 367 0
 352 0020 1846     		mov	r0, r3
 353 0022 10BD     		pop	{r4, pc}
 354              	.L32:
 355              		.align	2
 356              	.L31:
 357 0024 00000000 		.word	.LANCHOR0
 358 0028 00000000 		.word	.LANCHOR1
 359              		.cfi_endproc
 360              	.LFE138:
 362              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 363              		.align	2
 364              		.global	HAL_GetTickFreq
 365              		.thumb
 366              		.thumb_func
 368              	HAL_GetTickFreq:
ARM GAS  /tmp/ccJoFBu8.s 			page 14


 369              	.LFB139:
 368:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 369:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 370:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Return tick frequency.
 371:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval tick period in Hz
 372:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 373:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 374:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 370              		.loc 1 374 0
 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 0
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374              		@ link register save eliminated.
 375:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return uwTickFreq;
 376:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 375              		.loc 1 376 0
 376 0000 014B     		ldr	r3, .L34
 377 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 378 0004 7047     		bx	lr
 379              	.L35:
 380 0006 00BF     		.align	2
 381              	.L34:
 382 0008 00000000 		.word	.LANCHOR0
 383              		.cfi_endproc
 384              	.LFE139:
 386              		.section	.text.HAL_Delay,"ax",%progbits
 387              		.align	2
 388              		.weak	HAL_Delay
 389              		.thumb
 390              		.thumb_func
 392              	HAL_Delay:
 393              	.LFB140:
 377:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 378:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 379:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based 
 380:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *        on variable incremented.
 381:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 382:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 383:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is incremented.
 384:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 385:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 386:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 387:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 388:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 389:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 390:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 394              		.loc 1 390 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 0
 397              		@ frame_needed = 0, uses_anonymous_args = 0
 398              	.LVL18:
 399 0000 38B5     		push	{r3, r4, r5, lr}
 400              	.LCFI4:
 401              		.cfi_def_cfa_offset 16
 402              		.cfi_offset 3, -16
 403              		.cfi_offset 4, -12
 404              		.cfi_offset 5, -8
ARM GAS  /tmp/ccJoFBu8.s 			page 15


 405              		.cfi_offset 14, -4
 406 0002 0446     		mov	r4, r0
 391:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 407              		.loc 1 391 0
 408 0004 FFF7FEFF 		bl	HAL_GetTick
 409              	.LVL19:
 410 0008 0546     		mov	r5, r0
 411              	.LVL20:
 392:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   uint32_t wait = Delay;
 393:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 394:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 395:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 412              		.loc 1 395 0
 413 000a B4F1FF3F 		cmp	r4, #-1
 414 000e 02D0     		beq	.L38
 396:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 397:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 415              		.loc 1 397 0
 416 0010 044B     		ldr	r3, .L40
 417 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 418 0014 1C44     		add	r4, r4, r3
 419              	.LVL21:
 420              	.L38:
 398:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 399:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 400:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 421              		.loc 1 400 0 discriminator 1
 422 0016 FFF7FEFF 		bl	HAL_GetTick
 423              	.LVL22:
 424 001a 401B     		subs	r0, r0, r5
 425 001c 8442     		cmp	r4, r0
 426 001e FAD8     		bhi	.L38
 401:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   {
 402:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   }
 403:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 427              		.loc 1 403 0
 428 0020 38BD     		pop	{r3, r4, r5, pc}
 429              	.LVL23:
 430              	.L41:
 431 0022 00BF     		.align	2
 432              	.L40:
 433 0024 00000000 		.word	.LANCHOR0
 434              		.cfi_endproc
 435              	.LFE140:
 437              		.section	.text.HAL_SuspendTick,"ax",%progbits
 438              		.align	2
 439              		.weak	HAL_SuspendTick
 440              		.thumb
 441              		.thumb_func
 443              	HAL_SuspendTick:
 444              	.LFB141:
 404:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 405:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 406:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Suspend Tick increment.
 407:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 408:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 409:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment 
ARM GAS  /tmp/ccJoFBu8.s 			page 16


 410:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is suspended.
 411:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 412:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 413:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 414:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 415:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_SuspendTick(void)
 416:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 445              		.loc 1 416 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              		@ link register save eliminated.
 417:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Disable SysTick Interrupt */
 418:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 450              		.loc 1 418 0
 451 0000 024A     		ldr	r2, .L43
 452 0002 1368     		ldr	r3, [r2]
 453 0004 23F00203 		bic	r3, r3, #2
 454 0008 1360     		str	r3, [r2]
 455 000a 7047     		bx	lr
 456              	.L44:
 457              		.align	2
 458              	.L43:
 459 000c 10E000E0 		.word	-536813552
 460              		.cfi_endproc
 461              	.LFE141:
 463              		.section	.text.HAL_ResumeTick,"ax",%progbits
 464              		.align	2
 465              		.weak	HAL_ResumeTick
 466              		.thumb
 467              		.thumb_func
 469              	HAL_ResumeTick:
 470              	.LFB142:
 419:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 420:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 421:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 422:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief Resume Tick increment.
 423:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 424:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 425:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment 
 426:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       is resumed.
 427:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 428:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *       implementations in user file.
 429:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 430:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 431:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** __weak void HAL_ResumeTick(void)
 432:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 471              		.loc 1 432 0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
 475              		@ link register save eliminated.
 433:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   /* Enable SysTick Interrupt */
 434:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 476              		.loc 1 434 0
 477 0000 024A     		ldr	r2, .L46
 478 0002 1368     		ldr	r3, [r2]
ARM GAS  /tmp/ccJoFBu8.s 			page 17


 479 0004 43F00203 		orr	r3, r3, #2
 480 0008 1360     		str	r3, [r2]
 481 000a 7047     		bx	lr
 482              	.L47:
 483              		.align	2
 484              	.L46:
 485 000c 10E000E0 		.word	-536813552
 486              		.cfi_endproc
 487              	.LFE142:
 489              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 490              		.align	2
 491              		.global	HAL_GetHalVersion
 492              		.thumb
 493              		.thumb_func
 495              	HAL_GetHalVersion:
 496              	.LFB143:
 435:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 436:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 437:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 438:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the HAL revision
 439:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval version : 0xXYZR (8bits for each decimal, R for RC)
 440:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 441:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 442:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 497              		.loc 1 442 0
 498              		.cfi_startproc
 499              		@ args = 0, pretend = 0, frame = 0
 500              		@ frame_needed = 0, uses_anonymous_args = 0
 501              		@ link register save eliminated.
 443:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return __STM32F4xx_HAL_VERSION;
 444:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 502              		.loc 1 444 0
 503 0000 0048     		ldr	r0, .L49
 504 0002 7047     		bx	lr
 505              	.L50:
 506              		.align	2
 507              	.L49:
 508 0004 00070701 		.word	17237760
 509              		.cfi_endproc
 510              	.LFE143:
 512              		.section	.text.HAL_GetREVID,"ax",%progbits
 513              		.align	2
 514              		.global	HAL_GetREVID
 515              		.thumb
 516              		.thumb_func
 518              	HAL_GetREVID:
 519              	.LFB144:
 445:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 446:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 447:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device revision identifier.
 448:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device revision identifier
 449:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 450:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetREVID(void)
 451:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 520              		.loc 1 451 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /tmp/ccJoFBu8.s 			page 18


 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              		@ link register save eliminated.
 452:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 525              		.loc 1 452 0
 526 0000 014B     		ldr	r3, .L52
 527 0002 1868     		ldr	r0, [r3]
 453:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 528              		.loc 1 453 0
 529 0004 000C     		lsrs	r0, r0, #16
 530 0006 7047     		bx	lr
 531              	.L53:
 532              		.align	2
 533              	.L52:
 534 0008 002004E0 		.word	-536600576
 535              		.cfi_endproc
 536              	.LFE144:
 538              		.section	.text.HAL_GetDEVID,"ax",%progbits
 539              		.align	2
 540              		.global	HAL_GetDEVID
 541              		.thumb
 542              		.thumb_func
 544              	HAL_GetDEVID:
 545              	.LFB145:
 454:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 455:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 456:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns the device identifier.
 457:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 458:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 459:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetDEVID(void)
 460:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 546              		.loc 1 460 0
 547              		.cfi_startproc
 548              		@ args = 0, pretend = 0, frame = 0
 549              		@ frame_needed = 0, uses_anonymous_args = 0
 550              		@ link register save eliminated.
 461:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 551              		.loc 1 461 0
 552 0000 024B     		ldr	r3, .L55
 553 0002 1868     		ldr	r0, [r3]
 462:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 554              		.loc 1 462 0
 555 0004 C0F30B00 		ubfx	r0, r0, #0, #12
 556 0008 7047     		bx	lr
 557              	.L56:
 558 000a 00BF     		.align	2
 559              	.L55:
 560 000c 002004E0 		.word	-536600576
 561              		.cfi_endproc
 562              	.LFE145:
 564              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 565              		.align	2
 566              		.global	HAL_DBGMCU_EnableDBGSleepMode
 567              		.thumb
 568              		.thumb_func
 570              	HAL_DBGMCU_EnableDBGSleepMode:
 571              	.LFB146:
 463:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
ARM GAS  /tmp/ccJoFBu8.s 			page 19


 464:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 465:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during SLEEP mode
 466:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 467:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 468:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 469:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 572              		.loc 1 469 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 470:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 577              		.loc 1 470 0
 578 0000 024A     		ldr	r2, .L58
 579 0002 5368     		ldr	r3, [r2, #4]
 580 0004 43F00103 		orr	r3, r3, #1
 581 0008 5360     		str	r3, [r2, #4]
 582 000a 7047     		bx	lr
 583              	.L59:
 584              		.align	2
 585              	.L58:
 586 000c 002004E0 		.word	-536600576
 587              		.cfi_endproc
 588              	.LFE146:
 590              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 591              		.align	2
 592              		.global	HAL_DBGMCU_DisableDBGSleepMode
 593              		.thumb
 594              		.thumb_func
 596              	HAL_DBGMCU_DisableDBGSleepMode:
 597              	.LFB147:
 471:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 472:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 473:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 474:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during SLEEP mode
 475:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 476:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 477:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 478:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 598              		.loc 1 478 0
 599              		.cfi_startproc
 600              		@ args = 0, pretend = 0, frame = 0
 601              		@ frame_needed = 0, uses_anonymous_args = 0
 602              		@ link register save eliminated.
 479:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 603              		.loc 1 479 0
 604 0000 024A     		ldr	r2, .L61
 605 0002 5368     		ldr	r3, [r2, #4]
 606 0004 23F00103 		bic	r3, r3, #1
 607 0008 5360     		str	r3, [r2, #4]
 608 000a 7047     		bx	lr
 609              	.L62:
 610              		.align	2
 611              	.L61:
 612 000c 002004E0 		.word	-536600576
 613              		.cfi_endproc
 614              	.LFE147:
ARM GAS  /tmp/ccJoFBu8.s 			page 20


 616              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 617              		.align	2
 618              		.global	HAL_DBGMCU_EnableDBGStopMode
 619              		.thumb
 620              		.thumb_func
 622              	HAL_DBGMCU_EnableDBGStopMode:
 623              	.LFB148:
 480:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 481:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 482:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 483:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STOP mode
 484:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 485:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 486:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 487:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 624              		.loc 1 487 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		@ link register save eliminated.
 488:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 629              		.loc 1 488 0
 630 0000 024A     		ldr	r2, .L64
 631 0002 5368     		ldr	r3, [r2, #4]
 632 0004 43F00203 		orr	r3, r3, #2
 633 0008 5360     		str	r3, [r2, #4]
 634 000a 7047     		bx	lr
 635              	.L65:
 636              		.align	2
 637              	.L64:
 638 000c 002004E0 		.word	-536600576
 639              		.cfi_endproc
 640              	.LFE148:
 642              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 643              		.align	2
 644              		.global	HAL_DBGMCU_DisableDBGStopMode
 645              		.thumb
 646              		.thumb_func
 648              	HAL_DBGMCU_DisableDBGStopMode:
 649              	.LFB149:
 489:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 490:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 491:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 492:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STOP mode
 493:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 494:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 495:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 496:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 650              		.loc 1 496 0
 651              		.cfi_startproc
 652              		@ args = 0, pretend = 0, frame = 0
 653              		@ frame_needed = 0, uses_anonymous_args = 0
 654              		@ link register save eliminated.
 497:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 655              		.loc 1 497 0
 656 0000 024A     		ldr	r2, .L67
 657 0002 5368     		ldr	r3, [r2, #4]
ARM GAS  /tmp/ccJoFBu8.s 			page 21


 658 0004 23F00203 		bic	r3, r3, #2
 659 0008 5360     		str	r3, [r2, #4]
 660 000a 7047     		bx	lr
 661              	.L68:
 662              		.align	2
 663              	.L67:
 664 000c 002004E0 		.word	-536600576
 665              		.cfi_endproc
 666              	.LFE149:
 668              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 669              		.align	2
 670              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 671              		.thumb
 672              		.thumb_func
 674              	HAL_DBGMCU_EnableDBGStandbyMode:
 675              	.LFB150:
 498:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 499:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 500:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 501:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enable the Debug Module during STANDBY mode
 502:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 503:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 504:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 505:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 676              		.loc 1 505 0
 677              		.cfi_startproc
 678              		@ args = 0, pretend = 0, frame = 0
 679              		@ frame_needed = 0, uses_anonymous_args = 0
 680              		@ link register save eliminated.
 506:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 681              		.loc 1 506 0
 682 0000 024A     		ldr	r2, .L70
 683 0002 5368     		ldr	r3, [r2, #4]
 684 0004 43F00403 		orr	r3, r3, #4
 685 0008 5360     		str	r3, [r2, #4]
 686 000a 7047     		bx	lr
 687              	.L71:
 688              		.align	2
 689              	.L70:
 690 000c 002004E0 		.word	-536600576
 691              		.cfi_endproc
 692              	.LFE150:
 694              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 695              		.align	2
 696              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 697              		.thumb
 698              		.thumb_func
 700              	HAL_DBGMCU_DisableDBGStandbyMode:
 701              	.LFB151:
 507:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 508:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 509:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 510:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Disable the Debug Module during STANDBY mode
 511:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 512:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 513:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 514:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
ARM GAS  /tmp/ccJoFBu8.s 			page 22


 702              		.loc 1 514 0
 703              		.cfi_startproc
 704              		@ args = 0, pretend = 0, frame = 0
 705              		@ frame_needed = 0, uses_anonymous_args = 0
 706              		@ link register save eliminated.
 515:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 707              		.loc 1 515 0
 708 0000 024A     		ldr	r2, .L73
 709 0002 5368     		ldr	r3, [r2, #4]
 710 0004 23F00403 		bic	r3, r3, #4
 711 0008 5360     		str	r3, [r2, #4]
 712 000a 7047     		bx	lr
 713              	.L74:
 714              		.align	2
 715              	.L73:
 716 000c 002004E0 		.word	-536600576
 717              		.cfi_endproc
 718              	.LFE151:
 720              		.section	.text.HAL_EnableCompensationCell,"ax",%progbits
 721              		.align	2
 722              		.global	HAL_EnableCompensationCell
 723              		.thumb
 724              		.thumb_func
 726              	HAL_EnableCompensationCell:
 727              	.LFB152:
 516:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 517:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 518:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 519:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Enables the I/O Compensation Cell.
 520:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 521:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 522:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 523:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 524:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_EnableCompensationCell(void)
 525:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 728              		.loc 1 525 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 0
 731              		@ frame_needed = 0, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 526:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)ENABLE;
 733              		.loc 1 526 0
 734 0000 0122     		movs	r2, #1
 735 0002 014B     		ldr	r3, .L76
 736 0004 1A60     		str	r2, [r3]
 737 0006 7047     		bx	lr
 738              	.L77:
 739              		.align	2
 740              	.L76:
 741 0008 00042742 		.word	1109853184
 742              		.cfi_endproc
 743              	.LFE152:
 745              		.section	.text.HAL_DisableCompensationCell,"ax",%progbits
 746              		.align	2
 747              		.global	HAL_DisableCompensationCell
 748              		.thumb
 749              		.thumb_func
ARM GAS  /tmp/ccJoFBu8.s 			page 23


 751              	HAL_DisableCompensationCell:
 752              	.LFB153:
 527:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 528:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 529:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 530:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Power-down the I/O Compensation Cell.
 531:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @note   The I/O compensation cell can be used only when the device supply
 532:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *         voltage ranges from 2.4 to 3.6 V.  
 533:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval None
 534:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 535:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** void HAL_DisableCompensationCell(void)
 536:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 753              		.loc 1 536 0
 754              		.cfi_startproc
 755              		@ args = 0, pretend = 0, frame = 0
 756              		@ frame_needed = 0, uses_anonymous_args = 0
 757              		@ link register save eliminated.
 537:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   *(__IO uint32_t *)CMPCR_CMP_PD_BB = (uint32_t)DISABLE;
 758              		.loc 1 537 0
 759 0000 0022     		movs	r2, #0
 760 0002 014B     		ldr	r3, .L79
 761 0004 1A60     		str	r2, [r3]
 762 0006 7047     		bx	lr
 763              	.L80:
 764              		.align	2
 765              	.L79:
 766 0008 00042742 		.word	1109853184
 767              		.cfi_endproc
 768              	.LFE153:
 770              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 771              		.align	2
 772              		.global	HAL_GetUIDw0
 773              		.thumb
 774              		.thumb_func
 776              	HAL_GetUIDw0:
 777              	.LFB154:
 538:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 539:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 540:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 541:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns first word of the unique device identifier (UID based on 96 bits)
 542:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 543:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 544:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 545:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 778              		.loc 1 545 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 0
 781              		@ frame_needed = 0, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 546:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)UID_BASE)));
 547:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 783              		.loc 1 547 0
 784 0000 014B     		ldr	r3, .L82
 785 0002 1868     		ldr	r0, [r3]
 786 0004 7047     		bx	lr
 787              	.L83:
 788 0006 00BF     		.align	2
ARM GAS  /tmp/ccJoFBu8.s 			page 24


 789              	.L82:
 790 0008 107AFF1F 		.word	536836624
 791              		.cfi_endproc
 792              	.LFE154:
 794              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 795              		.align	2
 796              		.global	HAL_GetUIDw1
 797              		.thumb
 798              		.thumb_func
 800              	HAL_GetUIDw1:
 801              	.LFB155:
 548:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 549:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 550:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns second word of the unique device identifier (UID based on 96 bits)
 551:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 552:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 553:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw1(void)
 554:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 802              		.loc 1 554 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              		@ link register save eliminated.
 555:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 4U))));
 556:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 807              		.loc 1 556 0
 808 0000 014B     		ldr	r3, .L85
 809 0002 1868     		ldr	r0, [r3]
 810 0004 7047     		bx	lr
 811              	.L86:
 812 0006 00BF     		.align	2
 813              	.L85:
 814 0008 147AFF1F 		.word	536836628
 815              		.cfi_endproc
 816              	.LFE155:
 818              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 819              		.align	2
 820              		.global	HAL_GetUIDw2
 821              		.thumb
 822              		.thumb_func
 824              	HAL_GetUIDw2:
 825              	.LFB156:
 557:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** 
 558:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** /**
 559:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @brief  Returns third word of the unique device identifier (UID based on 96 bits)
 560:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   * @retval Device identifier
 561:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   */
 562:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 563:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** {
 826              		.loc 1 563 0
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 0, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 564:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c ****   return (READ_REG(*((uint32_t *)(UID_BASE + 8U))));
 565:Drivers/STM32F4xx_HAL_Driver/Src/stm32f4xx_hal.c **** }
 831              		.loc 1 565 0
ARM GAS  /tmp/ccJoFBu8.s 			page 25


 832 0000 014B     		ldr	r3, .L88
 833 0002 1868     		ldr	r0, [r3]
 834 0004 7047     		bx	lr
 835              	.L89:
 836 0006 00BF     		.align	2
 837              	.L88:
 838 0008 187AFF1F 		.word	536836632
 839              		.cfi_endproc
 840              	.LFE156:
 842              		.global	uwTickFreq
 843              		.global	uwTickPrio
 844              		.comm	uwTick,4,4
 845              		.section	.data.uwTickPrio,"aw",%progbits
 846              		.align	2
 847              		.set	.LANCHOR1,. + 0
 850              	uwTickPrio:
 851 0000 10000000 		.word	16
 852              		.section	.data.uwTickFreq,"aw",%progbits
 853              		.set	.LANCHOR0,. + 0
 856              	uwTickFreq:
 857 0000 01       		.byte	1
 858              		.text
 859              	.Letext0:
 860              		.file 2 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 861              		.file 3 "/usr/include/newlib/machine/_default_types.h"
 862              		.file 4 "/usr/include/newlib/sys/_stdint.h"
 863              		.file 5 "Drivers/CMSIS/Include/core_cm4.h"
 864              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 865              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 866              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 867              		.file 9 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/system_stm32f4xx.h"
 868              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_cortex.h"
ARM GAS  /tmp/ccJoFBu8.s 			page 26


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f4xx_hal.c
     /tmp/ccJoFBu8.s:21     .text.HAL_MspInit:0000000000000000 $t
     /tmp/ccJoFBu8.s:26     .text.HAL_MspInit:0000000000000000 HAL_MspInit
     /tmp/ccJoFBu8.s:39     .text.HAL_MspDeInit:0000000000000000 $t
     /tmp/ccJoFBu8.s:44     .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
     /tmp/ccJoFBu8.s:56     .text.HAL_DeInit:0000000000000000 $t
     /tmp/ccJoFBu8.s:61     .text.HAL_DeInit:0000000000000000 HAL_DeInit
     /tmp/ccJoFBu8.s:105    .text.HAL_DeInit:0000000000000028 $d
     /tmp/ccJoFBu8.s:110    .text.HAL_InitTick:0000000000000000 $t
     /tmp/ccJoFBu8.s:115    .text.HAL_InitTick:0000000000000000 HAL_InitTick
     /tmp/ccJoFBu8.s:170    .text.HAL_InitTick:0000000000000040 $d
     /tmp/ccJoFBu8.s:177    .text.HAL_Init:0000000000000000 $t
     /tmp/ccJoFBu8.s:182    .text.HAL_Init:0000000000000000 HAL_Init
     /tmp/ccJoFBu8.s:223    .text.HAL_Init:0000000000000030 $d
     /tmp/ccJoFBu8.s:228    .text.HAL_IncTick:0000000000000000 $t
     /tmp/ccJoFBu8.s:233    .text.HAL_IncTick:0000000000000000 HAL_IncTick
     /tmp/ccJoFBu8.s:251    .text.HAL_IncTick:0000000000000010 $d
                            *COM*:0000000000000004 uwTick
     /tmp/ccJoFBu8.s:257    .text.HAL_GetTick:0000000000000000 $t
     /tmp/ccJoFBu8.s:262    .text.HAL_GetTick:0000000000000000 HAL_GetTick
     /tmp/ccJoFBu8.s:277    .text.HAL_GetTick:0000000000000008 $d
     /tmp/ccJoFBu8.s:282    .text.HAL_GetTickPrio:0000000000000000 $t
     /tmp/ccJoFBu8.s:287    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
     /tmp/ccJoFBu8.s:301    .text.HAL_GetTickPrio:0000000000000008 $d
     /tmp/ccJoFBu8.s:306    .text.HAL_SetTickFreq:0000000000000000 $t
     /tmp/ccJoFBu8.s:311    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
     /tmp/ccJoFBu8.s:357    .text.HAL_SetTickFreq:0000000000000024 $d
     /tmp/ccJoFBu8.s:363    .text.HAL_GetTickFreq:0000000000000000 $t
     /tmp/ccJoFBu8.s:368    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
     /tmp/ccJoFBu8.s:382    .text.HAL_GetTickFreq:0000000000000008 $d
     /tmp/ccJoFBu8.s:387    .text.HAL_Delay:0000000000000000 $t
     /tmp/ccJoFBu8.s:392    .text.HAL_Delay:0000000000000000 HAL_Delay
     /tmp/ccJoFBu8.s:433    .text.HAL_Delay:0000000000000024 $d
     /tmp/ccJoFBu8.s:438    .text.HAL_SuspendTick:0000000000000000 $t
     /tmp/ccJoFBu8.s:443    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
     /tmp/ccJoFBu8.s:459    .text.HAL_SuspendTick:000000000000000c $d
     /tmp/ccJoFBu8.s:464    .text.HAL_ResumeTick:0000000000000000 $t
     /tmp/ccJoFBu8.s:469    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
     /tmp/ccJoFBu8.s:485    .text.HAL_ResumeTick:000000000000000c $d
     /tmp/ccJoFBu8.s:490    .text.HAL_GetHalVersion:0000000000000000 $t
     /tmp/ccJoFBu8.s:495    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
     /tmp/ccJoFBu8.s:508    .text.HAL_GetHalVersion:0000000000000004 $d
     /tmp/ccJoFBu8.s:513    .text.HAL_GetREVID:0000000000000000 $t
     /tmp/ccJoFBu8.s:518    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
     /tmp/ccJoFBu8.s:534    .text.HAL_GetREVID:0000000000000008 $d
     /tmp/ccJoFBu8.s:539    .text.HAL_GetDEVID:0000000000000000 $t
     /tmp/ccJoFBu8.s:544    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
     /tmp/ccJoFBu8.s:560    .text.HAL_GetDEVID:000000000000000c $d
     /tmp/ccJoFBu8.s:565    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
     /tmp/ccJoFBu8.s:570    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
     /tmp/ccJoFBu8.s:586    .text.HAL_DBGMCU_EnableDBGSleepMode:000000000000000c $d
     /tmp/ccJoFBu8.s:591    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
     /tmp/ccJoFBu8.s:596    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
     /tmp/ccJoFBu8.s:612    .text.HAL_DBGMCU_DisableDBGSleepMode:000000000000000c $d
     /tmp/ccJoFBu8.s:617    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
     /tmp/ccJoFBu8.s:622    .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
ARM GAS  /tmp/ccJoFBu8.s 			page 27


     /tmp/ccJoFBu8.s:638    .text.HAL_DBGMCU_EnableDBGStopMode:000000000000000c $d
     /tmp/ccJoFBu8.s:643    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
     /tmp/ccJoFBu8.s:648    .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
     /tmp/ccJoFBu8.s:664    .text.HAL_DBGMCU_DisableDBGStopMode:000000000000000c $d
     /tmp/ccJoFBu8.s:669    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
     /tmp/ccJoFBu8.s:674    .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
     /tmp/ccJoFBu8.s:690    .text.HAL_DBGMCU_EnableDBGStandbyMode:000000000000000c $d
     /tmp/ccJoFBu8.s:695    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
     /tmp/ccJoFBu8.s:700    .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
     /tmp/ccJoFBu8.s:716    .text.HAL_DBGMCU_DisableDBGStandbyMode:000000000000000c $d
     /tmp/ccJoFBu8.s:721    .text.HAL_EnableCompensationCell:0000000000000000 $t
     /tmp/ccJoFBu8.s:726    .text.HAL_EnableCompensationCell:0000000000000000 HAL_EnableCompensationCell
     /tmp/ccJoFBu8.s:741    .text.HAL_EnableCompensationCell:0000000000000008 $d
     /tmp/ccJoFBu8.s:746    .text.HAL_DisableCompensationCell:0000000000000000 $t
     /tmp/ccJoFBu8.s:751    .text.HAL_DisableCompensationCell:0000000000000000 HAL_DisableCompensationCell
     /tmp/ccJoFBu8.s:766    .text.HAL_DisableCompensationCell:0000000000000008 $d
     /tmp/ccJoFBu8.s:771    .text.HAL_GetUIDw0:0000000000000000 $t
     /tmp/ccJoFBu8.s:776    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
     /tmp/ccJoFBu8.s:790    .text.HAL_GetUIDw0:0000000000000008 $d
     /tmp/ccJoFBu8.s:795    .text.HAL_GetUIDw1:0000000000000000 $t
     /tmp/ccJoFBu8.s:800    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
     /tmp/ccJoFBu8.s:814    .text.HAL_GetUIDw1:0000000000000008 $d
     /tmp/ccJoFBu8.s:819    .text.HAL_GetUIDw2:0000000000000000 $t
     /tmp/ccJoFBu8.s:824    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
     /tmp/ccJoFBu8.s:838    .text.HAL_GetUIDw2:0000000000000008 $d
     /tmp/ccJoFBu8.s:856    .data.uwTickFreq:0000000000000000 uwTickFreq
     /tmp/ccJoFBu8.s:850    .data.uwTickPrio:0000000000000000 uwTickPrio
     /tmp/ccJoFBu8.s:846    .data.uwTickPrio:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
HAL_NVIC_SetPriorityGrouping
