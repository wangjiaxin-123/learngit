ARM GAS  /tmp/ccjUFhPN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m4
   3              		.eabi_attribute 27, 1
   4              		.eabi_attribute 28, 1
   5              		.fpu fpv4-sp-d16
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.thumb
  16              		.file	"main.c"
  17              		.text
  18              	.Ltext0:
  19              		.cfi_sections	.debug_frame
  20              		.section	.text.MX_GPIO_Init,"ax",%progbits
  21              		.align	2
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB134:
  27              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2019 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** /* USER CODE END Header */
  20:Src/main.c    **** 
  21:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  22:Src/main.c    **** #include "main.h"
  23:Src/main.c    **** #include "stdint.h"
  24:Src/main.c    **** 
  25:Src/main.c    **** /* Private includes ----------------------------------------------------------*/
  26:Src/main.c    **** /* USER CODE BEGIN Includes */
  27:Src/main.c    **** 
  28:Src/main.c    **** /* USER CODE END Includes */
  29:Src/main.c    **** 
  30:Src/main.c    **** /* Private typedef -----------------------------------------------------------*/
  31:Src/main.c    **** /* USER CODE BEGIN PTD */
ARM GAS  /tmp/ccjUFhPN.s 			page 2


  32:Src/main.c    **** 
  33:Src/main.c    **** /* USER CODE END PTD */
  34:Src/main.c    **** 
  35:Src/main.c    **** /* Private define ------------------------------------------------------------*/
  36:Src/main.c    **** /* USER CODE BEGIN PD */
  37:Src/main.c    **** 
  38:Src/main.c    **** /* USER CODE END PD */
  39:Src/main.c    **** 
  40:Src/main.c    **** /* Private macro -------------------------------------------------------------*/
  41:Src/main.c    **** /* USER CODE BEGIN PM */
  42:Src/main.c    **** 
  43:Src/main.c    **** /* USER CODE END PM */
  44:Src/main.c    **** 
  45:Src/main.c    **** /* Private variables ---------------------------------------------------------*/
  46:Src/main.c    **** TIM_HandleTypeDef htim3;
  47:Src/main.c    **** 
  48:Src/main.c    **** UART_HandleTypeDef huart2;
  49:Src/main.c    **** 
  50:Src/main.c    **** /* USER CODE BEGIN PV */
  51:Src/main.c    **** 
  52:Src/main.c    **** /* USER CODE END PV */
  53:Src/main.c    **** 
  54:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  55:Src/main.c    **** void SystemClock_Config(void);
  56:Src/main.c    **** static void MX_GPIO_Init(void);
  57:Src/main.c    **** static void MX_TIM3_Init(void);
  58:Src/main.c    **** static void MX_USART2_UART_Init(void);
  59:Src/main.c    **** /* USER CODE BEGIN PFP */
  60:Src/main.c    **** 
  61:Src/main.c    **** /* USER CODE END PFP */
  62:Src/main.c    **** 
  63:Src/main.c    **** /* Private user code ---------------------------------------------------------*/
  64:Src/main.c    **** /* USER CODE BEGIN 0 */
  65:Src/main.c    **** 
  66:Src/main.c    **** /* USER CODE END 0 */
  67:Src/main.c    **** 
  68:Src/main.c    **** /**
  69:Src/main.c    ****   * @brief  The application entry point.
  70:Src/main.c    ****   * @retval int
  71:Src/main.c    ****   */
  72:Src/main.c    **** int main(void)
  73:Src/main.c    **** {
  74:Src/main.c    ****   /* USER CODE BEGIN 1 */
  75:Src/main.c    **** uint32_t wang=0;
  76:Src/main.c    ****   /* USER CODE END 1 */
  77:Src/main.c    ****   
  78:Src/main.c    **** 
  79:Src/main.c    ****   /* MCU Configuration--------------------------------------------------------*/
  80:Src/main.c    **** 
  81:Src/main.c    ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  82:Src/main.c    ****   HAL_Init();
  83:Src/main.c    **** 
  84:Src/main.c    ****   /* USER CODE BEGIN Init */
  85:Src/main.c    **** 
  86:Src/main.c    ****   /* USER CODE END Init */
  87:Src/main.c    **** 
  88:Src/main.c    ****   /* Configure the system clock */
ARM GAS  /tmp/ccjUFhPN.s 			page 3


  89:Src/main.c    ****   SystemClock_Config();
  90:Src/main.c    **** 
  91:Src/main.c    ****   /* USER CODE BEGIN SysInit */
  92:Src/main.c    **** 
  93:Src/main.c    ****   /* USER CODE END SysInit */
  94:Src/main.c    **** 
  95:Src/main.c    ****   /* Initialize all configured peripherals */
  96:Src/main.c    ****   MX_GPIO_Init();
  97:Src/main.c    ****   MX_TIM3_Init();
  98:Src/main.c    ****   MX_USART2_UART_Init();
  99:Src/main.c    ****   /* USER CODE BEGIN 2 */
 100:Src/main.c    **** 
 101:Src/main.c    ****   /* USER CODE END 2 */
 102:Src/main.c    **** 
 103:Src/main.c    ****   /* Infinite loop */
 104:Src/main.c    ****   /* USER CODE BEGIN WHILE */
 105:Src/main.c    ****   while (1)
 106:Src/main.c    ****   {
 107:Src/main.c    ****     /* USER CODE END WHILE */
 108:Src/main.c    ****     
 109:Src/main.c    ****    HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_RESET);
 110:Src/main.c    ****    
 111:Src/main.c    ****   wang= (uint32_t)__HAL_TIM_GET_COUNTER(&htim3);
 112:Src/main.c    ****   
 113:Src/main.c    ****     /* USER CODE BEGIN 3 */
 114:Src/main.c    ****   }
 115:Src/main.c    ****   /* USER CODE END 3 */
 116:Src/main.c    **** }
 117:Src/main.c    **** 
 118:Src/main.c    **** /**
 119:Src/main.c    ****   * @brief System Clock Configuration
 120:Src/main.c    ****   * @retval None
 121:Src/main.c    ****   */
 122:Src/main.c    **** void SystemClock_Config(void)
 123:Src/main.c    **** {
 124:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 125:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 126:Src/main.c    **** 
 127:Src/main.c    ****   /** Configure the main internal regulator output voltage 
 128:Src/main.c    ****   */
 129:Src/main.c    ****   __HAL_RCC_PWR_CLK_ENABLE();
 130:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 131:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 132:Src/main.c    ****   */
 133:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 134:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 140:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 141:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 142:Src/main.c    ****   {
 143:Src/main.c    ****     Error_Handler();
 144:Src/main.c    ****   }
 145:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
ARM GAS  /tmp/ccjUFhPN.s 			page 4


 146:Src/main.c    ****   */
 147:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 148:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 149:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 150:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 151:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 152:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 153:Src/main.c    **** 
 154:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 155:Src/main.c    ****   {
 156:Src/main.c    ****     Error_Handler();
 157:Src/main.c    ****   }
 158:Src/main.c    **** }
 159:Src/main.c    **** 
 160:Src/main.c    **** /**
 161:Src/main.c    ****   * @brief TIM3 Initialization Function
 162:Src/main.c    ****   * @param None
 163:Src/main.c    ****   * @retval None
 164:Src/main.c    ****   */
 165:Src/main.c    **** static void MX_TIM3_Init(void)
 166:Src/main.c    **** {
 167:Src/main.c    **** 
 168:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 0 */
 169:Src/main.c    **** 
 170:Src/main.c    ****   /* USER CODE END TIM3_Init 0 */
 171:Src/main.c    **** 
 172:Src/main.c    ****   TIM_Encoder_InitTypeDef sConfig = {0};
 173:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 1 */
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE END TIM3_Init 1 */
 178:Src/main.c    ****   htim3.Instance = TIM3;
 179:Src/main.c    ****   htim3.Init.Prescaler = 0;
 180:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 181:Src/main.c    ****   htim3.Init.Period = 65535;
 182:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 183:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 184:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 185:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 186:Src/main.c    ****   sConfig.IC1Selection = TIM_ICSELECTION_DIRECTTI;
 187:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 188:Src/main.c    ****   sConfig.IC1Filter = 0;
 189:Src/main.c    ****   sConfig.IC2Polarity = TIM_ICPOLARITY_RISING;
 190:Src/main.c    ****   sConfig.IC2Selection = TIM_ICSELECTION_DIRECTTI;
 191:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 192:Src/main.c    ****   sConfig.IC2Filter = 0;
 193:Src/main.c    ****   if (HAL_TIM_Encoder_Init(&htim3, &sConfig) != HAL_OK)
 194:Src/main.c    ****   {
 195:Src/main.c    ****     Error_Handler();
 196:Src/main.c    ****   }
 197:Src/main.c    ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 198:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 199:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 200:Src/main.c    ****   {
 201:Src/main.c    ****     Error_Handler();
 202:Src/main.c    ****   }
ARM GAS  /tmp/ccjUFhPN.s 			page 5


 203:Src/main.c    ****   /* USER CODE BEGIN TIM3_Init 2 */
 204:Src/main.c    **** 
 205:Src/main.c    ****   /* USER CODE END TIM3_Init 2 */
 206:Src/main.c    **** 
 207:Src/main.c    **** }
 208:Src/main.c    **** 
 209:Src/main.c    **** /**
 210:Src/main.c    ****   * @brief USART2 Initialization Function
 211:Src/main.c    ****   * @param None
 212:Src/main.c    ****   * @retval None
 213:Src/main.c    ****   */
 214:Src/main.c    **** static void MX_USART2_UART_Init(void)
 215:Src/main.c    **** {
 216:Src/main.c    **** 
 217:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 0 */
 218:Src/main.c    **** 
 219:Src/main.c    ****   /* USER CODE END USART2_Init 0 */
 220:Src/main.c    **** 
 221:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 1 */
 222:Src/main.c    **** 
 223:Src/main.c    ****   /* USER CODE END USART2_Init 1 */
 224:Src/main.c    ****   huart2.Instance = USART2;
 225:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 226:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 227:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 228:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 229:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 230:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 231:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 232:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 233:Src/main.c    ****   {
 234:Src/main.c    ****     Error_Handler();
 235:Src/main.c    ****   }
 236:Src/main.c    ****   /* USER CODE BEGIN USART2_Init 2 */
 237:Src/main.c    **** 
 238:Src/main.c    ****   /* USER CODE END USART2_Init 2 */
 239:Src/main.c    **** 
 240:Src/main.c    **** }
 241:Src/main.c    **** 
 242:Src/main.c    **** /**
 243:Src/main.c    ****   * @brief GPIO Initialization Function
 244:Src/main.c    ****   * @param None
 245:Src/main.c    ****   * @retval None
 246:Src/main.c    ****   */
 247:Src/main.c    **** static void MX_GPIO_Init(void)
 248:Src/main.c    **** {
  28              		.loc 1 248 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 40
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 8BB0     		sub	sp, sp, #44
ARM GAS  /tmp/ccjUFhPN.s 			page 6


  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 56
 249:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 249 0
  42 0004 0024     		movs	r4, #0
  43 0006 0594     		str	r4, [sp, #20]
  44 0008 0694     		str	r4, [sp, #24]
  45 000a 0794     		str	r4, [sp, #28]
  46 000c 0894     		str	r4, [sp, #32]
  47 000e 0994     		str	r4, [sp, #36]
  48              	.LBB2:
 250:Src/main.c    **** 
 251:Src/main.c    ****   /* GPIO Ports Clock Enable */
 252:Src/main.c    ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 252 0
  50 0010 0094     		str	r4, [sp]
  51 0012 264B     		ldr	r3, .L3
  52 0014 1A6B     		ldr	r2, [r3, #48]
  53 0016 42F08002 		orr	r2, r2, #128
  54 001a 1A63     		str	r2, [r3, #48]
  55 001c 1A6B     		ldr	r2, [r3, #48]
  56 001e 02F08002 		and	r2, r2, #128
  57 0022 0092     		str	r2, [sp]
  58 0024 009A     		ldr	r2, [sp]
  59              	.LBE2:
  60              	.LBB3:
 253:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  61              		.loc 1 253 0
  62 0026 0194     		str	r4, [sp, #4]
  63 0028 1A6B     		ldr	r2, [r3, #48]
  64 002a 42F00202 		orr	r2, r2, #2
  65 002e 1A63     		str	r2, [r3, #48]
  66 0030 1A6B     		ldr	r2, [r3, #48]
  67 0032 02F00202 		and	r2, r2, #2
  68 0036 0192     		str	r2, [sp, #4]
  69 0038 019A     		ldr	r2, [sp, #4]
  70              	.LBE3:
  71              	.LBB4:
 254:Src/main.c    ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  72              		.loc 1 254 0
  73 003a 0294     		str	r4, [sp, #8]
  74 003c 1A6B     		ldr	r2, [r3, #48]
  75 003e 42F00402 		orr	r2, r2, #4
  76 0042 1A63     		str	r2, [r3, #48]
  77 0044 1A6B     		ldr	r2, [r3, #48]
  78 0046 02F00402 		and	r2, r2, #4
  79 004a 0292     		str	r2, [sp, #8]
  80 004c 029A     		ldr	r2, [sp, #8]
  81              	.LBE4:
  82              	.LBB5:
 255:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  83              		.loc 1 255 0
  84 004e 0394     		str	r4, [sp, #12]
  85 0050 1A6B     		ldr	r2, [r3, #48]
  86 0052 42F00102 		orr	r2, r2, #1
  87 0056 1A63     		str	r2, [r3, #48]
  88 0058 1A6B     		ldr	r2, [r3, #48]
ARM GAS  /tmp/ccjUFhPN.s 			page 7


  89 005a 02F00102 		and	r2, r2, #1
  90 005e 0392     		str	r2, [sp, #12]
  91 0060 039A     		ldr	r2, [sp, #12]
  92              	.LBE5:
  93              	.LBB6:
 256:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  94              		.loc 1 256 0
  95 0062 0494     		str	r4, [sp, #16]
  96 0064 1A6B     		ldr	r2, [r3, #48]
  97 0066 42F00802 		orr	r2, r2, #8
  98 006a 1A63     		str	r2, [r3, #48]
  99 006c 1B6B     		ldr	r3, [r3, #48]
 100 006e 03F00803 		and	r3, r3, #8
 101 0072 0493     		str	r3, [sp, #16]
 102 0074 049B     		ldr	r3, [sp, #16]
 103              	.LBE6:
 257:Src/main.c    **** 
 258:Src/main.c    ****   /*Configure GPIO pin Output Level */
 259:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 104              		.loc 1 259 0
 105 0076 0E4D     		ldr	r5, .L3+4
 106 0078 2846     		mov	r0, r5
 107 007a 0121     		movs	r1, #1
 108 007c 0A46     		mov	r2, r1
 109 007e FFF7FEFF 		bl	HAL_GPIO_WritePin
 110              	.LVL0:
 260:Src/main.c    **** 
 261:Src/main.c    ****   /*Configure GPIO pin : PB0 */
 262:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_0;
 111              		.loc 1 262 0
 112 0082 0123     		movs	r3, #1
 113 0084 0593     		str	r3, [sp, #20]
 263:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 114              		.loc 1 263 0
 115 0086 0693     		str	r3, [sp, #24]
 264:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 116              		.loc 1 264 0
 117 0088 0794     		str	r4, [sp, #28]
 265:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 118              		.loc 1 265 0
 119 008a 0894     		str	r4, [sp, #32]
 266:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 120              		.loc 1 266 0
 121 008c 2846     		mov	r0, r5
 122 008e 05A9     		add	r1, sp, #20
 123 0090 FFF7FEFF 		bl	HAL_GPIO_Init
 124              	.LVL1:
 267:Src/main.c    **** 
 268:Src/main.c    ****   /*Configure GPIO pin : PC8 */
 269:Src/main.c    ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 125              		.loc 1 269 0
 126 0094 4FF48073 		mov	r3, #256
 127 0098 0593     		str	r3, [sp, #20]
 270:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 128              		.loc 1 270 0
 129 009a 064B     		ldr	r3, .L3+8
 130 009c 0693     		str	r3, [sp, #24]
ARM GAS  /tmp/ccjUFhPN.s 			page 8


 271:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 131              		.loc 1 271 0
 132 009e 0794     		str	r4, [sp, #28]
 272:Src/main.c    ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 133              		.loc 1 272 0
 134 00a0 0548     		ldr	r0, .L3+12
 135 00a2 05A9     		add	r1, sp, #20
 136 00a4 FFF7FEFF 		bl	HAL_GPIO_Init
 137              	.LVL2:
 273:Src/main.c    **** 
 274:Src/main.c    **** }
 138              		.loc 1 274 0
 139 00a8 0BB0     		add	sp, sp, #44
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 12
 142              		@ sp needed
 143 00aa 30BD     		pop	{r4, r5, pc}
 144              	.L4:
 145              		.align	2
 146              	.L3:
 147 00ac 00380240 		.word	1073887232
 148 00b0 00040240 		.word	1073873920
 149 00b4 00001110 		.word	269549568
 150 00b8 00080240 		.word	1073874944
 151              		.cfi_endproc
 152              	.LFE134:
 154              		.section	.text.MX_TIM3_Init,"ax",%progbits
 155              		.align	2
 156              		.thumb
 157              		.thumb_func
 159              	MX_TIM3_Init:
 160              	.LFB132:
 166:Src/main.c    **** 
 161              		.loc 1 166 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 48
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165 0000 30B5     		push	{r4, r5, lr}
 166              	.LCFI3:
 167              		.cfi_def_cfa_offset 12
 168              		.cfi_offset 4, -12
 169              		.cfi_offset 5, -8
 170              		.cfi_offset 14, -4
 171 0002 8DB0     		sub	sp, sp, #52
 172              	.LCFI4:
 173              		.cfi_def_cfa_offset 64
 172:Src/main.c    ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 174              		.loc 1 172 0
 175 0004 0024     		movs	r4, #0
 176 0006 0494     		str	r4, [sp, #16]
 177 0008 0694     		str	r4, [sp, #24]
 178 000a 0794     		str	r4, [sp, #28]
 179 000c 0894     		str	r4, [sp, #32]
 180 000e 0A94     		str	r4, [sp, #40]
 181 0010 0B94     		str	r4, [sp, #44]
 173:Src/main.c    **** 
 182              		.loc 1 173 0
ARM GAS  /tmp/ccjUFhPN.s 			page 9


 183 0012 0194     		str	r4, [sp, #4]
 184 0014 0294     		str	r4, [sp, #8]
 178:Src/main.c    ****   htim3.Init.Prescaler = 0;
 185              		.loc 1 178 0
 186 0016 0D4D     		ldr	r5, .L7
 187 0018 0D4B     		ldr	r3, .L7+4
 188 001a 2B60     		str	r3, [r5]
 179:Src/main.c    ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 189              		.loc 1 179 0
 190 001c 6C60     		str	r4, [r5, #4]
 180:Src/main.c    ****   htim3.Init.Period = 65535;
 191              		.loc 1 180 0
 192 001e AC60     		str	r4, [r5, #8]
 181:Src/main.c    ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 193              		.loc 1 181 0
 194 0020 4FF6FF73 		movw	r3, #65535
 195 0024 EB60     		str	r3, [r5, #12]
 182:Src/main.c    ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 196              		.loc 1 182 0
 197 0026 2C61     		str	r4, [r5, #16]
 183:Src/main.c    ****   sConfig.EncoderMode = TIM_ENCODERMODE_TI12;
 198              		.loc 1 183 0
 199 0028 AC61     		str	r4, [r5, #24]
 184:Src/main.c    ****   sConfig.IC1Polarity = TIM_ICPOLARITY_RISING;
 200              		.loc 1 184 0
 201 002a 0323     		movs	r3, #3
 202 002c 0393     		str	r3, [sp, #12]
 186:Src/main.c    ****   sConfig.IC1Prescaler = TIM_ICPSC_DIV1;
 203              		.loc 1 186 0
 204 002e 0123     		movs	r3, #1
 205 0030 0593     		str	r3, [sp, #20]
 190:Src/main.c    ****   sConfig.IC2Prescaler = TIM_ICPSC_DIV1;
 206              		.loc 1 190 0
 207 0032 0993     		str	r3, [sp, #36]
 193:Src/main.c    ****   {
 208              		.loc 1 193 0
 209 0034 2846     		mov	r0, r5
 210 0036 03A9     		add	r1, sp, #12
 211 0038 FFF7FEFF 		bl	HAL_TIM_Encoder_Init
 212              	.LVL3:
 197:Src/main.c    ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 213              		.loc 1 197 0
 214 003c 0194     		str	r4, [sp, #4]
 198:Src/main.c    ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 215              		.loc 1 198 0
 216 003e 0294     		str	r4, [sp, #8]
 199:Src/main.c    ****   {
 217              		.loc 1 199 0
 218 0040 2846     		mov	r0, r5
 219 0042 01A9     		add	r1, sp, #4
 220 0044 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 221              	.LVL4:
 207:Src/main.c    **** 
 222              		.loc 1 207 0
 223 0048 0DB0     		add	sp, sp, #52
 224              	.LCFI5:
 225              		.cfi_def_cfa_offset 12
ARM GAS  /tmp/ccjUFhPN.s 			page 10


 226              		@ sp needed
 227 004a 30BD     		pop	{r4, r5, pc}
 228              	.L8:
 229              		.align	2
 230              	.L7:
 231 004c 00000000 		.word	htim3
 232 0050 00040040 		.word	1073742848
 233              		.cfi_endproc
 234              	.LFE132:
 236              		.section	.text.MX_USART2_UART_Init,"ax",%progbits
 237              		.align	2
 238              		.thumb
 239              		.thumb_func
 241              	MX_USART2_UART_Init:
 242              	.LFB133:
 215:Src/main.c    **** 
 243              		.loc 1 215 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247 0000 08B5     		push	{r3, lr}
 248              	.LCFI6:
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 3, -8
 251              		.cfi_offset 14, -4
 224:Src/main.c    ****   huart2.Init.BaudRate = 115200;
 252              		.loc 1 224 0
 253 0002 0848     		ldr	r0, .L11
 254 0004 084B     		ldr	r3, .L11+4
 255 0006 0360     		str	r3, [r0]
 225:Src/main.c    ****   huart2.Init.WordLength = UART_WORDLENGTH_8B;
 256              		.loc 1 225 0
 257 0008 4FF4E133 		mov	r3, #115200
 258 000c 4360     		str	r3, [r0, #4]
 226:Src/main.c    ****   huart2.Init.StopBits = UART_STOPBITS_1;
 259              		.loc 1 226 0
 260 000e 0023     		movs	r3, #0
 261 0010 8360     		str	r3, [r0, #8]
 227:Src/main.c    ****   huart2.Init.Parity = UART_PARITY_NONE;
 262              		.loc 1 227 0
 263 0012 C360     		str	r3, [r0, #12]
 228:Src/main.c    ****   huart2.Init.Mode = UART_MODE_TX_RX;
 264              		.loc 1 228 0
 265 0014 0361     		str	r3, [r0, #16]
 229:Src/main.c    ****   huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 266              		.loc 1 229 0
 267 0016 0C22     		movs	r2, #12
 268 0018 4261     		str	r2, [r0, #20]
 230:Src/main.c    ****   huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 269              		.loc 1 230 0
 270 001a 8361     		str	r3, [r0, #24]
 231:Src/main.c    ****   if (HAL_UART_Init(&huart2) != HAL_OK)
 271              		.loc 1 231 0
 272 001c C361     		str	r3, [r0, #28]
 232:Src/main.c    ****   {
 273              		.loc 1 232 0
 274 001e FFF7FEFF 		bl	HAL_UART_Init
ARM GAS  /tmp/ccjUFhPN.s 			page 11


 275              	.LVL5:
 276 0022 08BD     		pop	{r3, pc}
 277              	.L12:
 278              		.align	2
 279              	.L11:
 280 0024 00000000 		.word	huart2
 281 0028 00440040 		.word	1073759232
 282              		.cfi_endproc
 283              	.LFE133:
 285              		.section	.text.SystemClock_Config,"ax",%progbits
 286              		.align	2
 287              		.global	SystemClock_Config
 288              		.thumb
 289              		.thumb_func
 291              	SystemClock_Config:
 292              	.LFB131:
 123:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 293              		.loc 1 123 0
 294              		.cfi_startproc
 295              		@ args = 0, pretend = 0, frame = 80
 296              		@ frame_needed = 0, uses_anonymous_args = 0
 297 0000 30B5     		push	{r4, r5, lr}
 298              	.LCFI7:
 299              		.cfi_def_cfa_offset 12
 300              		.cfi_offset 4, -12
 301              		.cfi_offset 5, -8
 302              		.cfi_offset 14, -4
 303 0002 95B0     		sub	sp, sp, #84
 304              	.LCFI8:
 305              		.cfi_def_cfa_offset 96
 124:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 306              		.loc 1 124 0
 307 0004 0024     		movs	r4, #0
 308 0006 0894     		str	r4, [sp, #32]
 309 0008 0994     		str	r4, [sp, #36]
 310 000a 0A94     		str	r4, [sp, #40]
 311 000c 0B94     		str	r4, [sp, #44]
 312 000e 0C94     		str	r4, [sp, #48]
 313 0010 0D94     		str	r4, [sp, #52]
 314 0012 0E94     		str	r4, [sp, #56]
 315 0014 0F94     		str	r4, [sp, #60]
 316 0016 1094     		str	r4, [sp, #64]
 317 0018 1194     		str	r4, [sp, #68]
 318 001a 1294     		str	r4, [sp, #72]
 319 001c 1394     		str	r4, [sp, #76]
 125:Src/main.c    **** 
 320              		.loc 1 125 0
 321 001e 0394     		str	r4, [sp, #12]
 322 0020 0494     		str	r4, [sp, #16]
 323 0022 0594     		str	r4, [sp, #20]
 324 0024 0694     		str	r4, [sp, #24]
 325 0026 0794     		str	r4, [sp, #28]
 326              	.LBB7:
 129:Src/main.c    ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 327              		.loc 1 129 0
 328 0028 0194     		str	r4, [sp, #4]
 329 002a 1C4B     		ldr	r3, .L15
ARM GAS  /tmp/ccjUFhPN.s 			page 12


 330 002c 1A6C     		ldr	r2, [r3, #64]
 331 002e 42F08052 		orr	r2, r2, #268435456
 332 0032 1A64     		str	r2, [r3, #64]
 333 0034 1B6C     		ldr	r3, [r3, #64]
 334 0036 03F08053 		and	r3, r3, #268435456
 335 003a 0193     		str	r3, [sp, #4]
 336 003c 019B     		ldr	r3, [sp, #4]
 337              	.LBE7:
 338              	.LBB8:
 130:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 339              		.loc 1 130 0
 340 003e 0294     		str	r4, [sp, #8]
 341 0040 174B     		ldr	r3, .L15+4
 342 0042 1A68     		ldr	r2, [r3]
 343 0044 42F48042 		orr	r2, r2, #16384
 344 0048 1A60     		str	r2, [r3]
 345 004a 1B68     		ldr	r3, [r3]
 346 004c 03F48043 		and	r3, r3, #16384
 347 0050 0293     		str	r3, [sp, #8]
 348 0052 029B     		ldr	r3, [sp, #8]
 349              	.LBE8:
 133:Src/main.c    ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 350              		.loc 1 133 0
 351 0054 0123     		movs	r3, #1
 352 0056 0893     		str	r3, [sp, #32]
 134:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 353              		.loc 1 134 0
 354 0058 4FF48033 		mov	r3, #65536
 355 005c 0993     		str	r3, [sp, #36]
 135:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 356              		.loc 1 135 0
 357 005e 0225     		movs	r5, #2
 358 0060 0E95     		str	r5, [sp, #56]
 136:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLM = 4;
 359              		.loc 1 136 0
 360 0062 4FF48003 		mov	r3, #4194304
 361 0066 0F93     		str	r3, [sp, #60]
 137:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLN = 168;
 362              		.loc 1 137 0
 363 0068 0423     		movs	r3, #4
 364 006a 1093     		str	r3, [sp, #64]
 138:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 365              		.loc 1 138 0
 366 006c A822     		movs	r2, #168
 367 006e 1192     		str	r2, [sp, #68]
 139:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 368              		.loc 1 139 0
 369 0070 1295     		str	r5, [sp, #72]
 140:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 370              		.loc 1 140 0
 371 0072 1393     		str	r3, [sp, #76]
 141:Src/main.c    ****   {
 372              		.loc 1 141 0
 373 0074 08A8     		add	r0, sp, #32
 374 0076 FFF7FEFF 		bl	HAL_RCC_OscConfig
 375              	.LVL6:
 147:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
ARM GAS  /tmp/ccjUFhPN.s 			page 13


 376              		.loc 1 147 0
 377 007a 0F23     		movs	r3, #15
 378 007c 0393     		str	r3, [sp, #12]
 149:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 379              		.loc 1 149 0
 380 007e 0495     		str	r5, [sp, #16]
 150:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 381              		.loc 1 150 0
 382 0080 0594     		str	r4, [sp, #20]
 151:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 383              		.loc 1 151 0
 384 0082 4FF4A053 		mov	r3, #5120
 385 0086 0693     		str	r3, [sp, #24]
 152:Src/main.c    **** 
 386              		.loc 1 152 0
 387 0088 4FF48053 		mov	r3, #4096
 388 008c 0793     		str	r3, [sp, #28]
 154:Src/main.c    ****   {
 389              		.loc 1 154 0
 390 008e 03A8     		add	r0, sp, #12
 391 0090 0521     		movs	r1, #5
 392 0092 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 393              	.LVL7:
 158:Src/main.c    **** 
 394              		.loc 1 158 0
 395 0096 15B0     		add	sp, sp, #84
 396              	.LCFI9:
 397              		.cfi_def_cfa_offset 12
 398              		@ sp needed
 399 0098 30BD     		pop	{r4, r5, pc}
 400              	.L16:
 401 009a 00BF     		.align	2
 402              	.L15:
 403 009c 00380240 		.word	1073887232
 404 00a0 00700040 		.word	1073770496
 405              		.cfi_endproc
 406              	.LFE131:
 408              		.section	.text.main,"ax",%progbits
 409              		.align	2
 410              		.global	main
 411              		.thumb
 412              		.thumb_func
 414              	main:
 415              	.LFB130:
  73:Src/main.c    ****   /* USER CODE BEGIN 1 */
 416              		.loc 1 73 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 0, uses_anonymous_args = 0
 420 0000 08B5     		push	{r3, lr}
 421              	.LCFI10:
 422              		.cfi_def_cfa_offset 8
 423              		.cfi_offset 3, -8
 424              		.cfi_offset 14, -4
 425              	.LVL8:
  82:Src/main.c    **** 
 426              		.loc 1 82 0
ARM GAS  /tmp/ccjUFhPN.s 			page 14


 427 0002 FFF7FEFF 		bl	HAL_Init
 428              	.LVL9:
  89:Src/main.c    **** 
 429              		.loc 1 89 0
 430 0006 FFF7FEFF 		bl	SystemClock_Config
 431              	.LVL10:
  96:Src/main.c    ****   MX_TIM3_Init();
 432              		.loc 1 96 0
 433 000a FFF7FEFF 		bl	MX_GPIO_Init
 434              	.LVL11:
  97:Src/main.c    ****   MX_USART2_UART_Init();
 435              		.loc 1 97 0
 436 000e FFF7FEFF 		bl	MX_TIM3_Init
 437              	.LVL12:
  98:Src/main.c    ****   /* USER CODE BEGIN 2 */
 438              		.loc 1 98 0
 439 0012 FFF7FEFF 		bl	MX_USART2_UART_Init
 440              	.LVL13:
 441              	.L18:
 109:Src/main.c    ****    
 442              		.loc 1 109 0 discriminator 1
 443 0016 0448     		ldr	r0, .L20
 444 0018 0121     		movs	r1, #1
 445 001a 0022     		movs	r2, #0
 446 001c FFF7FEFF 		bl	HAL_GPIO_WritePin
 447              	.LVL14:
 111:Src/main.c    ****   
 448              		.loc 1 111 0 discriminator 1
 449 0020 024B     		ldr	r3, .L20+4
 450 0022 1B68     		ldr	r3, [r3]
 451 0024 5B6A     		ldr	r3, [r3, #36]
 114:Src/main.c    ****   /* USER CODE END 3 */
 452              		.loc 1 114 0 discriminator 1
 453 0026 F6E7     		b	.L18
 454              	.L21:
 455              		.align	2
 456              	.L20:
 457 0028 00040240 		.word	1073873920
 458 002c 00000000 		.word	htim3
 459              		.cfi_endproc
 460              	.LFE130:
 462              		.section	.text.Error_Handler,"ax",%progbits
 463              		.align	2
 464              		.global	Error_Handler
 465              		.thumb
 466              		.thumb_func
 468              	Error_Handler:
 469              	.LFB135:
 275:Src/main.c    **** 
 276:Src/main.c    **** /* USER CODE BEGIN 4 */
 277:Src/main.c    **** 
 278:Src/main.c    **** /* USER CODE END 4 */
 279:Src/main.c    **** 
 280:Src/main.c    **** /**
 281:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 282:Src/main.c    ****   * @retval None
 283:Src/main.c    ****   */
ARM GAS  /tmp/ccjUFhPN.s 			page 15


 284:Src/main.c    **** void Error_Handler(void)
 285:Src/main.c    **** {
 470              		.loc 1 285 0
 471              		.cfi_startproc
 472              		@ args = 0, pretend = 0, frame = 0
 473              		@ frame_needed = 0, uses_anonymous_args = 0
 474              		@ link register save eliminated.
 475 0000 7047     		bx	lr
 476              		.cfi_endproc
 477              	.LFE135:
 479              		.comm	huart2,64,4
 480              		.comm	htim3,64,4
 481 0002 00BF     		.text
 482              	.Letext0:
 483              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 484              		.file 3 "/usr/include/newlib/sys/_stdint.h"
 485              		.file 4 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f405xx.h"
 486              		.file 5 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 487              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 488              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 489              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 490              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 491              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 492              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_uart.h"
 493              		.file 12 "Drivers/CMSIS/Include/core_cm4.h"
 494              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 495              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  /tmp/ccjUFhPN.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccjUFhPN.s:21     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccjUFhPN.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccjUFhPN.s:147    .text.MX_GPIO_Init:00000000000000ac $d
     /tmp/ccjUFhPN.s:155    .text.MX_TIM3_Init:0000000000000000 $t
     /tmp/ccjUFhPN.s:159    .text.MX_TIM3_Init:0000000000000000 MX_TIM3_Init
     /tmp/ccjUFhPN.s:231    .text.MX_TIM3_Init:000000000000004c $d
                            *COM*:0000000000000040 htim3
     /tmp/ccjUFhPN.s:237    .text.MX_USART2_UART_Init:0000000000000000 $t
     /tmp/ccjUFhPN.s:241    .text.MX_USART2_UART_Init:0000000000000000 MX_USART2_UART_Init
     /tmp/ccjUFhPN.s:280    .text.MX_USART2_UART_Init:0000000000000024 $d
                            *COM*:0000000000000040 huart2
     /tmp/ccjUFhPN.s:286    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccjUFhPN.s:291    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccjUFhPN.s:403    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccjUFhPN.s:409    .text.main:0000000000000000 $t
     /tmp/ccjUFhPN.s:414    .text.main:0000000000000000 main
     /tmp/ccjUFhPN.s:457    .text.main:0000000000000028 $d
     /tmp/ccjUFhPN.s:463    .text.Error_Handler:0000000000000000 $t
     /tmp/ccjUFhPN.s:468    .text.Error_Handler:0000000000000000 Error_Handler
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_TIM_Encoder_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_UART_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
